/*
    Список инициализации членов класса

    Пусть есть некоторый класс. Можно создать объект этого класса и инициализировать этот объект, используя
    круглые или фигурные скобочки. В этом случае для инициализации вызовется соответствующий конструктор.

    Но как инициализировать поля класса нужным нам образом?
    Ведь если написать конструктор так:

        Book(const std::string& title, int pages, float price)
        {
            // к этому моменту все поля уже инициализованы через default-инициализацию
            mTitle = title;
            mPages = pages;
            mPrice = price;
        }
    
    То мы не сможем инициализировать поля класса так, как нам хочется. Нельзя инициализировать поля внутри конструктора.
    Так как поля должны быть созданы до входа в конструктор.
    Поэтому в примере выше поля инициализируются с помощью default-инициализации, а потом полям задаются значения
    с помощью присваивания. То есть, вместо одной инициализации получилась default-инициализация + присваивание.

    Чтобы сразу инициализировать поле нужным образом следует использовать специальный синтаксис списка инициализации:

        Book(const std::string& title, int pages, float price) : mTitle(title), mPages(pages), mPrice(price)
        {
            // к этому моменту все поля инициализованы так как указано в списке инициализации
            // (с помошью direct-инициализации)
        }
*/

#include <iostream>
#include <string>
using std::cout, std::endl;

class Book
{
private:

    std::string mTitle;
    int mPages;
    float mPrice;

public:

    Book(const std::string& title, int pages, float price) : mTitle(title), mPages(pages), mPrice(price)
    {
    }

    void print()
    {
        cout << mTitle << ", pages = " << mPages << ", price = " << mPrice << endl;
    }
};


int main()
{
    Book a {"Harry Potter", 1000, 2000};
    a.print();
}




/*
    Задача 1:

        Создайте ещё один конструктор с одним параметром типа int.
        Конструктор должен инициализировать поля, используя список инициализации.
        Например, если на вход приходит число 123, то поля должны задаваться следующим образом:

            mTitle: "123"  mPages: 123  mPrice: 123.0


    Задача 2:

        Создайте конструктор копирования для класса Book.
        Инициализируйте поля в списке инициализации.


    Задача 3:

        Создайте конструктор по умолчанию для класса Book.
        Инициализируйте поля в списке инициализации. Используйте value-инициализацию.
*/