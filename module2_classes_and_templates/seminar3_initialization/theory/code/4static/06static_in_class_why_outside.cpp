/*
    Почему статические поля должны инициализироваться вне класса?

    
    На самом деле, таким образом мы указываем в какой единице трансляции будет находится эта статическая переменная.
    Или, простыми словами, какому .cpp файлу эта переменная будет принадлежать.

    Статическая переменная должна быть одна на весь класс, а объявлять один и тот же класс мы можем в
    разных .cpp файлах. Соответственно, если инициализировать статическую переменную внутри класса было бы
    возможно, то можно было бы написать что-то вроде:


     main.cpp                                          other.cpp
    ╔═══════════════════════════════════╗             ╔═══════════════════════════════════╗
    ║                                   ║             ║                                   ║
    ║ #include <iostream>               ║             ║ #include <iostream>               ║
    ║                                   ║             ║                                   ║
    ║ class Rectangle                   ║             ║ class Rectangle                   ║
    ║ {                                 ║             ║ {                                 ║
    ║ private:                          ║             ║ private:                          ║
    ║     float mWidth;                 ║             ║     float mWidth;                 ║
    ║     float mHeight;                ║             ║     float mHeight;                ║
    ║                                   ║             ║                                   ║
    ║ public:                           ║             ║ public:                           ║
    ║     Rectangle(float, float);      ║             ║     Rectangle(float, float);      ║
    ║     static int value = 10;        ║             ║     static int value = 20;        ║
    ║ };                                ║             ║ };                                ║
    ║                                   ║             ║                                   ║
    ║                                   ║             ╚═══════════════════════════════════╝
    ║ int main()                        ║             
    ║ {                                 ║             
    ║     cout << Rectangle::value;     ║             
    ║ }                                 ║             
    ║                                   ║              
    ╚═══════════════════════════════════╝              
    
    
    И если бы мы скомпилировали эти два файла как одну программу, то у нас было бы две переменной Rectangle::value.
    Одна в единице трансляции, соответствующей файлу main.cpp, а другая - в единице трансляции, соответствующей
    файлу other.cpp.

    Пример - в папке static_why_outside/.
*/

int main()
{
}