/*
    Класс std::array<typename, std::size_t>

    
    Массивы языка C во многом неудобны потому что:

        1)  Синтаксис отличается от контейнеров языка C++ таких как std::vector и других.

        2)  При передаче массива C в функцию, они неявно превращаются в указатели.

        3)  Нет удобных методов типа size, begin, end, front, back и других.


    В языке C++ есть шаблонный класс std::array, который призван заменить массивы языка C.
    Объекты в std::array хранятся в самом объекте, также как и у массивов языка C.
    Но в отличии от массивов языка C, массивы std::array имеют более удобный синтаксис.

    В отличии от контейнера std::vector контейнер std::array имеет фиксированный размер и хранит все
    элементы в самом объекте (в отличии от вектора, который в объекте хранит указатель на элементы в куче).

    В целом, этот класс похож на класс Array, который мы писали в главе 1template_classes.
*/

#include <iostream>
#include <array>
using std::cout, std::endl;

int main()
{
    std::array<int, 5> a = {10, 20, 30, 40, 50};

    for (int i = 0; i < a.size(); ++i)
    {
        cout << a[i] << " ";
    }
    cout << endl;
}


