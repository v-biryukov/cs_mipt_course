/*
    using алиасы внутри классов

    Создавать новые имена типов можно и внутри классов. Чтобы впоследствии получить доступ к этим новым именам типов 
    нужно использовать оператор ::. Как будто класс является пространством имён для этих новых имён.

    Также в языке C++ можно создавать классы внутри классов. Получить доступ к этим классам можно также
    с помощью оператора ::.

    Также, в 3-м семинаре, мы проходили статические поля классов. Такие поля являются общими для всех объектов
    класса. Получить доступ к такому полю можно, используя название класса и оператор ::.


    В этом примере создан класс House. Внутри этого класса определены два алиаса Cat и Dog, класс Room и
    статическое поле sValue. Обратите внимание, что получить доступ к этим именам мы можем даже если
    мы не создаём объект класса House.
*/


#include <iostream>
using std::cout, std::endl;


class House 
{
public:

    typedef int Cat;

    using Dog = int;


    class Room
    {
    public:
        int width, height;
        using Mouse = int;
    };
    
    static const int sValue = 400;
};



int main()
{
    House::Cat a = 100;
    House::Dog b = 200;
    House::Room::Mouse c = 300;

    cout << a << endl;
    cout << b << endl;
    cout << c << endl;


    cout << House::sValue << endl;
}

