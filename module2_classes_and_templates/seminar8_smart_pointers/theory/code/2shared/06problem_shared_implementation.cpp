#include <iostream>
#include <string>
#include <vector>
#include <memory>
using std::cout, std::endl;


int main()
{

}


/*
    Задача:
    
    Создайте свою простую реализацию шаблонного класса SharedPointer<T>

    Приватные поля должны выглядеть так:
    class SharedPointer
    {
    private:
        T* m_pointer;
        unsigned* m_counter;

        // .....
    };


    Нужно реализовать:

    1) Конструктор от T*
    2) Конструктор копирования
    3) Оператор присваивания
    4) Перегруженный оператор *
    5) Перегруженный оператор -> (тут нужно загуглить)
    6) Метод get, который возвращает m_pointer
    7) Метод use_count, который возвращает значение счётчика

    8) Шаблонную функцию makeShared, но только от одного аргумента

    Конструктор перемещения и т. д. реализововать не нужно

*/