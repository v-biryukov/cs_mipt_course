/*
    Методы cbegin() и cend()

    cbegin() возвращает константный итератор на первый элемент.

    cend()  возвращает константный итератор на фиктивный элемент следующий после последнего.
            итератор сend() нельзя разыменовывать, это приведёт к неопределённому поведению.


    Константный итератор вектора это объект типа std::vector<T>::const_iterator.
    Он предназначен для работы с векторами, которые являются константами.

    Константный итератор не может менять элементы вектора, но он сам меняться может.
    Это аналог константного указателя:

    Может менять то, на что указывает, но не может меняться сам:
        int* const p     <--->     const std::vector<int>::iterator it


    Не может менять то, на что указывает, но может меняться сам:
        const int* p     <--->     std::vector<int>::const_iterator it



    Также есть обратные константные итераторы crbegin() и crend().
*/

#include <iostream>
#include <vector>
#include <string>
using std::cout, std::endl;

int main()
{
    const std::vector<int> v {10, 20, 30, 40, 50, 60, 70};

    for (std::vector<int>::const_iterator it = v.cbegin(); it != v.cend(); ++it)
        cout << *it << " ";
    cout << endl;
}