/*
    Перемещение строки std::string


    1)  Перемещение строк работает также как и перемещение векторов в случае длинных строк (когда не работает оптимизация SSO).
        В этом случае std::string выделяет память в куче, чтобы хранить там содержимое своей строки.
        После перемещения строка из которой происходит перемещение становится пустой.


        Если же строка маленькая и работает оптимизация SSO, то никакого выделения памяти в куче не происходит,
        а содержимое строки хранится в самом объекте std::string.
        Несмотря на это, даже при перемещении маленькой строки, строка из которой происходит перемещение становится пустой.
        Это сделано для того, чтобы поведение строки при перемещении не зависело от её размера.


    2)  Строка "Cat" маленькая, поэтому работает SSO и никакая память в куче не выделяется.

        При копировании этой строки, просто копируются все её поля*.
        
        При перемещении этой строки, сначала копируются все её поля*, а потом зануляются поля строки
        из которой происходило копирование.
        Поэтому в данном случае перемещение будет работать дольше, чем копирование.


        (*) если SSO реализовано таким образом, что объект малой строки содержит указатель, указывающий на буфер,
        находящийся в самом объекте string, то такой указатель, конечно, не копируется, а задаётся таким образом, чтобы
        он указывал на соответствующий буфер нового объекта.
*/

#include <string>
#include <iostream>
#include <utility>
using std::cout, std::endl;

int main()
{
    std::string a = "Cat";
    std::string b = "Mouse";

    cout << "string a = " << a << endl;
    cout << "string b = " << b << endl;

    b = std::move(a);

    cout << "string a = " << a << endl;
    cout << "string b = " << b << endl;
}