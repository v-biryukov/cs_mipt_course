/*
    Рассмотрим операцию перемещения вектора

    При перемещении одного вектора в другой происходит следующее:

        1)  Поверхностное копирование
            то есть из одного объекта в другой копируются только поля вектора (указатель на данные, размер и вместмость)

        2)  Вектор из которого производилось перемещение перестаёт владеть ресурсом (то есть объектами в куче).
            Но, тем не менее, он должен остаться в корректном состоянии. 
            Каким будет это корректное состояние может различаться для разных типов.
            В случае вектора, объект из которого происходит перемещение просто станет пустым.

    Перемещение одного объекта в другой производится с помощью специальной функции std::move:

        std::vector<int> b = std::move(a);


    Схематическое изображение памяти:

        До перемещения:                                        |    После перемещения:
                                                               |                                                           
         a                                                     |     a     
        ╔═══════════╗          ╔════╤════╤════╤════╤════╗      |    ╔═══════════╗
        ║     *─────╫────────> ║ 10 │ 20 │ 30 │ 40 │ 50 ║      |    ║  nullptr  ║
        ╟───────────╢          ╚════╧════╧════╧════╧════╝      |    ╟───────────╢
        ║     5     ║                                          |    ║     0     ║                  
        ╟───────────╢                                          |    ╟───────────╢                  
        ║     5     ║                                          |    ║     0     ║                  
        ╚═══════════╝                                          |    ╚═══════════╝                  
                                                               |                                   
                                                               |                                           
         b                                                     |     b
        ╔═══════════╗                                          |    ╔═══════════╗          ╔════╤════╤════╤════╤════╗
        ║  nullptr  ║                                          |    ║     *─────╫────────> ║ 10 │ 20 │ 30 │ 40 │ 50 ║
        ╟───────────╢                                          |    ╟───────────╢          ╚════╧════╧════╧════╧════╝
        ║     0     ║                                          |    ║     5     ║
        ╟───────────╢                                          |    ╟───────────╢
        ║     0     ║                                          |    ║     5     ║
        ╚═══════════╝                                          |    ╚═══════════╝

*/

#include <vector>
#include <iostream>
#include <utility>
using std::cout, std::endl;

// Вспомагательная функция для вывода вектора на экран
std::ostream& operator<<(std::ostream& out, const std::vector<int>& v)
{
    for (auto el : v)
        out << el << " ";
    return out;
}

int main()
{
    std::vector<int> a {10, 20, 30, 40, 50};
    std::vector<int> b;

    b = std::move(a);  // Перемещаем вектор a в вектор b

    cout << "vector a = " << a << endl;
    cout << "vector b = " << b << endl;

    cout << "vector a: size = " << a.size() << ", capacity = " << a.capacity() << ", pointer = " << &a[0] << endl;
    cout << "vector b: size = " << b.size() << ", capacity = " << b.capacity() << ", pointer = " << &b[0] << endl;
}

