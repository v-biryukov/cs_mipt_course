/*
    rvalue-ссылки

    В языке также есть другие ссылки, так называемые rvalue-ссылки.
    Название типа таких ссылок заканчивается на && вместо &.

    Самое главное, что нужно понимать о rvalue-ссылках это то, что они очень похожи на lvalue-ссылки.
    Разница между этими видами ссылок:

        1)  rvalue-ссылки инициализируются только rvalue выражениями
        2)  можно сделать перегрузку функций по виду ссылк (lvalue-ссылка или rvalue-ссылка)
*/


#include <iostream>
using std::cout, std::endl;

int main()
{
    int a = 10;

    int&& r1 = a;   // Error
    int&& r2 = 20;  // OK
}

/*
    Задачи:

        1)  Работа с rvalue-ссылками

            a)  Создайте rvalue ссылку std::string&& и инициализируйте его значением "Mouse".
            b)  Напечатайте этот объект
            c)  Измените объект на "Elephant" и снова его напечатайте.

        2)  Создайте две перегруженные функции printCategory, которые будут принимать числа типа int, 
            но эти функции будут перегружены по категории аргумента. 
            Если на вход приходит lvalue, то функция должна напечатать "lvalue", если rvalue, то "rvalue".
            Протестируйте на следующем коде:

                int a = 10;
                printCategory(a);       // lvalue
                printCategory(20);      // rvalue
                printCategory(a + 1);   // rvalue

                std::vector<int> b {10, 20, 30, 40, 50};
                printCategory(b[0]);    // lvalue
*/