/*
    Оператор присваивания перемещения


    При присваивании одной строки std::string другой строке типа std::string будет происходить
    или копирование или перемещение в зависимости от категории выражения стоящем справа от знака присваивания.


    Из второго семинара известно, что в случае присваивания объекта типа std::string вызывается оператор присваивания:

        std::string& operator=(const std::string& x)

    В этом методе и прописывается всё, что будет происходить при присваивании строки.
    Но этот оператор будет вызываться если справа стоит lvalue-выражение.
    Если же справа стоит rvalue-выражение, то будет происходить перемещение и будет вызываться:

        std::string& operator=(std::string&& x)

    Такой перегруженный оператор называется оператором присваивания перемещения.

    
    Таким образом, присваивание строки вот так:

        c = [какое-то выражение];

    Приведёт к вызову метода:

        c.operator=([какое-то выражение])

    Так как операторы присваивания перегружены по кактегории принимаемого значения, то будет вызываться или 
    оператор присваивания копирования или оператор присваивания перемещения в зависимости от того, какая 
    категория у [какое-то выражение].
*/


#include <iostream>
#include <vector>
#include <string>
using std::cout, std::endl;



int main()
{
    std::string a {"Axolotl"};
    std::string b {"Bear"};

    std::string c, d, e;

    c = a;              // Строка a скопируется в строку c.
    d = a + b;          // Временная строка a + b переметится в строку d.
    e = std::move(a);   // Строка a переместится в строку e. После этого строка a станет пустой
}