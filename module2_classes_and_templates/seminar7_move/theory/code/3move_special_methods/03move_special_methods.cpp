/*
    Конструктор перемещения и оператор присваивания перемещения

    Конструктор перемещения и оператор присваивания перемещения являются особыми методами класса.
    То есть, если вы не напишите никаких конструкторов/операторов копирования/перемещения и деструкторов, 
    то конструктор перемещения и оператор присваивания создадутся автоматически.

    Автоматически сгенерированные конструктор перемещения и оператор присваивания перемещения
    будут просто вызывать соответствующие методы для всех поле класса (если их нет то будит просто копировать).

    Например, в данном примере, для класса Book будут автоматически сгенерированы конструктор перемещения и 
    оператор присваивания перемещения, которые будут просто перемещать все поля класса.
*/


#include <iostream>
#include <vector>
#include <string>
using std::cout, std::endl;


class Book
{
private:
    std::string mTitle {};
    int mPages {};
    float mPrice {};


public:

    Book(const std::string& title, int pages, float price)
        : mTitle{title}, mPages{pages}, mPrice{price}
    {}

    void print() const
    {
        cout << "Book Title: " << mTitle << ", pages: " << mPages << ", price: " << mPrice << endl;
    }
};



int main()
{
    Book a {"The Catcher in the Rye", 500, 400};
    a.print();


    Book b = std::move(a);

    a.print();
    b.print();
}