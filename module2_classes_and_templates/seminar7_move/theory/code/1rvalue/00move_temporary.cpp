/*
    Копирование vs Перемещение

    На прошлом семинаре мы изучили, что если функция принимает объект по значению, то объекты будут копироваться или 
    перемещаться в эту функцию в зависимости от того являются ли они "временными" или нет.

    Например, если мы функция принимает объект типа std::string по значению, то при передаче в него простой переменной:

        func(a);

    объект a будет копироваться в функцию func.
    Если же мы в эту же функцию передадим временный объект:

        func(a + b);

    то поведение будет другим. Сначала создастся временный объект, который будет являтся результатом конкатенации
    строк a и b, а потом этот временный объект будет перемещён в функцию func.
*/




#include <iostream>
#include <string>
using std::cout, std::endl;


void func(std::string s)
{
    cout << s << endl;
}

std::string get()
{
    return std::string{"Cat"};
}

int main()
{
    std::string a = "Axolotl";
    std::string b = "Bear";


    func(a);        // Объект a будет копироваться в функцию
    func(a + b);    // Временный объект a + b будет перемещаться в функцию
    func(get());    // Временный объект, который вернётся из функции get, будет перемещаться в функцию func
}