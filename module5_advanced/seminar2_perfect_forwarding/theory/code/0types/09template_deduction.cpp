#include <string>
#include <vector>
#include <iostream>
#include "type_name.hpp"
using std::cout, std::endl;

/*
	Какой тип T выведется у шаблонной функции func при вызове
		int a = 10;
		func(a)
		
	Ведь от этого зависит результат выполнения программы
	Если выведется T = int, то переменная не изменится внутри функции
	Если выведется T = int&, то переменная изменится внутри функции

*/



template <typename T>
void func(T x)
{
    x++;
}



int main()
{
    const int& a = 10;
    cout << a << endl;

    func(a);
    cout << a << endl;
}

/*
	Задачи:
	
	1)	Что напечатает данная программа? Какой тип выведется для T?
	
	
	2)	Если мы создадим ссылку
			int& r = a;
		и передадим её внутрь функции, 
			func(r);
		то какой тип выведется для T в этом случае


	3)	Если мы создадим константную ссылку
			const int& c = a;
		и передадим её внутрь функции, 
			func(c);
		то какой тип выведется для T в этом случае
		
		
	4)	Если мы сами укажем тип для T
			func<int&>(a);
		Увеличится ли переменная a в этом случае
		
		
	5)	Можно ли указать в качестве типа int&& (rvalue-ссылку)
		и передать туда переменную, используя std::move


*/
